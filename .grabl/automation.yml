#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    common: [build, release]
    behaviour: [build]

build:
  quality:
    filter:
      owner: graknlabs
      branch: master
    dependency-analysis:
      image: graknlabs-ubuntu-20.04
      command: |
        bazel run @graknlabs_dependencies//grabl/analysis:dependency-analysis
  correctness:
    build:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel build //... --spawn_strategy=local
        bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)')
        npm install
        npm run lint
    test-integration:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        npm install
        ./test/common/start-core-server.sh
        npm run test && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        ./test/common/stop-core-server.sh
        exit $TEST_SUCCESS
    test-cluster-failover:
      machine: 4-core-8-gb
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        npm install
        ./test/common/start-cluster-servers.sh
        npm run test-cluster-failover && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        ./test/common/stop-cluster-servers.sh
        exit $TEST_SUCCESS
    test-behaviour-connection:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/connection/... --test_output=errors --jobs=1
    test-behaviour-concept:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/concept/... --test_output=errors --jobs=1
    # TODO: Delete --jobs=1 once tests are parallelisable
    test-behaviour-match:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/graql/language/match/... --test_output=errors --jobs=1
        bazel test //test/behaviour/graql/language/get/... --test_output=errors --jobs=1
    test-behaviour-writable:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/graql/language/insert/... --test_output=errors --jobs=1
        bazel test //test/behaviour/graql/language/delete/... --test_output=errors --jobs=1
        bazel test //test/behaviour/graql/language/update/... --test_output=errors --jobs=1
    test-behaviour-definable:
      image: graknlabs-ubuntu-20.04
      command: |
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/behaviour/graql/language/define/... --test_output=errors --jobs=1
        bazel test //test/behaviour/graql/language/undefine/... --test_output=errors --jobs=1
    deploy-npm-snapshot:
#       filter:
#         owner: graknlabs
#         branch: master
      image: graknlabs-ubuntu-20.04
      command: |
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo apt update -y
        sudo apt install -y expect
        export DEPLOY_NPM_USERNAME=$REPO_GRAKN_USERNAME
        export DEPLOY_NPM_PASSWORD=$REPO_GRAKN_PASSWORD
        export DEPLOY_NPM_EMAIL=$REPO_GRAKN_EMAIL
        bazel run --define version=$(git rev-parse HEAD) --spawn_strategy=local //:deploy-npm -- snapshot
#       dependencies: [build, test-integration, test-behaviour-connection, test-behaviour-concept, test-behaviour-match, test-behaviour-writable, test-behaviour-definable]
    test-deployment-npm:
      filter:
        owner: graknlabs
        branch: master
      image: graknlabs-ubuntu-20.04
      command: |
        ./test/common/start-core-server.sh
        cd test/deployment/
        echo -n "0.0.0-$GRABL_COMMIT" > ../../VERSION
        npm install https://repo.grakn.ai/repository/npm-snapshot-group/grakn-client/-/grakn-client-$(cat ../../VERSION).tgz
        sudo -H npm install jest --global
        jest --detectOpenHandles application.test.js && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        kill $(jps | awk '/GraknServer/ {print $1}')
        exit $TEST_SUCCESS
      dependencies: [deploy-npm-snapshot]

release:
  filter:
    owner: graknlabs
    branch: master
  validation:
    validate-dependencies:
      image: graknlabs-ubuntu-20.04
      command: bazel test //:release-validate-nodejs-deps --test_output=streamed
  deployment:
    deploy-github:
      image: graknlabs-ubuntu-20.04
      command: |
        pyenv install -s 3.6.10
        pyenv global 3.6.10 system
        pip install certifi
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:create-notes -- client-nodejs $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $GRABL_COMMIT
    deploy-npm-release:
      image: graknlabs-ubuntu-20.04
      command: |
        export DEPLOY_NPM_USERNAME=$REPO_NPM_USERNAME
        export DEPLOY_NPM_PASSWORD=$REPO_NPM_PASSWORD
        export DEPLOY_NPM_EMAIL=$REPO_GRAKN_EMAIL
        curl https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo apt update -y
        sudo apt install -y expect
        export ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
        export ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run --define version=$(cat VERSION) //:deploy-npm -- release
      dependencies: [deploy-github]
