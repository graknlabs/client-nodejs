#
# Copyright (C) 2020 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel:
    steps:
      - run: |
          mkdir install
          cd install
          curl -OL https://raw.githubusercontent.com/lolski/build-tools/refactor/tool/bazelinstall/linux.sh
          bash ./linux.sh
          curl -OL https://raw.githubusercontent.com/lolski/build-tools/refactor/tool/bazelinstall/rbe.sh
          bash ./rbe.sh
          cd ..
          rm -rf install

  run-bazel:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel -- << parameters.command >>

  run-grakn:
    steps:
      - run-bazel:
          command: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-bin/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel build //...

  test:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel test //:test-integration --test_output=streamed

  deploy-npm-snapshot:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run: sudo apt update -y
      - run: sudo apt install -y expect
      - run: |
          export DEPLOY_NPM_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_NPM_PASSWORD=$REPO_GRAKN_PASSWORD
          export DEPLOY_NPM_EMAIL=$REPO_GRAKN_EMAIL
          bazel run --define version=$(git rev-parse HEAD) //:deploy-npm -- snapshot

  test-deployment:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run-grakn
      - run: |
          source /opt/circleci/.nvm/nvm.sh
          nvm install v10.15.3
          nvm use --delete-prefix v10.15.3
          cd tests/deployment/
          echo -n "0.0.0-$CIRCLE_SHA1" > ../../VERSION
          npm install https://repo.grakn.ai/repository/npm-snapshot-group/grakn-client/-/grakn-client-$(cat ../../VERSION).tgz
          npm install jest --global
          jest --detectOpenHandles application.test.js

  sync-dependencies-snapshot:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tools/sync:dependencies -- \
          --source client-nodejs@$CIRCLE_SHA1 \
          --targets grakn-kgms:master workbase:master

  release-approval:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run: |
          export RELEASE_APPROVAL_USERNAME=$REPO_GITHUB_USERNAME
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tools/release:approval

  deploy-github:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run: |
          pip install certifi
          export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tools/release:create-notes -- client-nodejs $(cat VERSION) ./RELEASE_TEMPLATE.md
      - run: |
          export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
          bazel run --define version=$(cat VERSION) //:deploy-github -- $CIRCLE_SHA1

  deploy-npm-release:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run: sudo apt update -y
      - run: sudo apt install -y expect
      - run: |
          export DEPLOY_NPM_USERNAME=$REPO_NPM_USERNAME
          export DEPLOY_NPM_PASSWORD=$REPO_NPM_PASSWORD
          export DEPLOY_NPM_EMAIL=$REPO_NPM_EMAIL
          bazel run --define version=$(cat VERSION) //:deploy-npm -- release

  sync-dependencies-release:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - install-bazel
      - checkout
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @graknlabs_dependencies//tools/sync:dependencies -- \
          --source client-nodejs@$(cat VERSION) \
          --targets grakn-kgms:master workbase:master docs:master examples:master

  release-cleanup:
    machine: 
      image: ubuntu-1604:201903-01
    working_directory: ~/client-nodejs
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/graknlabs/client-nodejs $CIRCLE_BRANCH

workflows:
  client-nodejs:
    jobs:
      - build:
          filters:
            branches:
              ignore: client-nodejs-release-branch
      - test:
          filters:
            branches:
              ignore: client-nodejs-release-branch
      - deploy-npm-snapshot:
          filters:
            branches:
              only: master
          requires:
            - build
            - test
      - test-deployment:
          filters:
            branches:
              only: master
          requires:
            - deploy-npm-snapshot
      - sync-dependencies-snapshot:
          filters:
            branches:
              only: master
          requires:
            - test-deployment
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - sync-dependencies-snapshot

  client-nodejs-release:
    jobs:
      - deploy-github:
          filters:
            branches:
              only: client-nodejs-release-branch
      - deploy-approval:
          type: approval
          requires:
            - deploy-github
          filters:
            branches:
              only: client-nodejs-release-branch
      - deploy-npm-release:
          requires:
            - deploy-approval
          filters:
            branches:
              only: client-nodejs-release-branch
      - sync-dependencies-release:
          filters:
            branches:
              only: client-nodejs-release-branch
          requires:
            - deploy-npm-release
      - release-cleanup:
          filters:
            branches:
              only: client-nodejs-release-branch
          requires:
            - sync-dependencies-release
